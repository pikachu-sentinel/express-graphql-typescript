version: "3.7"

services:
    server:
        build:
            context: ./
            target: development-build-stage
        ports:
            - "${APP_PORT:-3000}:3000"
        volumes:
            - ./:/app
            - /app/node_modules
        restart: "unless-stopped"
        networks:
            - backend
        depends_on:
            - mysql
            - redis

    mysql:
        image: "mysql:8.0"
        environment:
            MYSQL_ROOT_PASSWORD: "${TYPEORM_PASSWORD}"
            MYSQL_DATABASE: "${TYPEORM_DATABASE}"
            MYSQL_USER: "${TYPEORM_USERNAME}"
            MYSQL_PASSWORD: "${TYPEORM_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        volumes:
            - "backendmysql:/var/lib/mysql"
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping"]

    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "backendredis:/data"
        networks:
            - backend
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]

    mailhog:
        image: "mailhog/mailhog:latest"
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - backend

networks:
    backend:
        driver: bridge

volumes:
    backendmysql:
        driver: local
    backendredis:
        driver: local
